name: Run screener and publish CSV

on:
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: screener-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DEFAULT_BRANCH: 'main'   # change en 'master' si besoin
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure clean working tree (sync to origin/main)
        run: |
          git fetch origin $DEFAULT_BRANCH
          git reset --hard origin/$DEFAULT_BRANCH
          git clean -fd

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate Russell2000 from iShares
        run: python gen_r2000_from_ishares.py || true

      - name: Build sector catalog (R1K + SPSM)
        run: python build_sector_catalog.py || true

      - name: Run screener
        env:
          PYTHONUNBUFFERED: "1"
        run: python mix_ab_screen_indices.py

      - name: Run backtest
        run: python backtest_signals.py

      - name: Fetch Fear & Greed CSV
        run: |
          set -euo pipefail
          python fetch_fear_greed.py || { echo "fetch_fear_greed.py failed"; exit 1; }

          # Si ton script écrit à la racine, synchronise vers le dossier consommé par le front
          if [ -f "fear_greed.csv" ]; then
            mkdir -p dashboard/public
            cp -f fear_greed.csv dashboard/public/fear_greed.csv
          fi

      - name: Sanity check Fear & Greed
        run: |
          set -euo pipefail
          echo "== HEAD root fear_greed.csv =="
          [ -f "fear_greed.csv" ] && head -n 5 fear_greed.csv || echo "no root fear_greed.csv"
          echo "== HEAD dashboard/public/fear_greed.csv =="
          [ -f "dashboard/public/fear_greed.csv" ] && head -n 5 dashboard/public/fear_greed.csv || (echo "missing dashboard/public/fear_greed.csv" && exit 1)
          echo "== GIT STATUS =="
          git status --porcelain

      - name: Check ignore rules for fear_greed.csv
        run: |
          git check-ignore -v dashboard/public/fear_greed.csv || echo "not ignored"


      - name: Commit & push CSV updates
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No CSV changes to commit."
            exit 0
          fi
          git commit -m "auto: update CSVs (fear_greed + others)"
          git pull --rebase origin main
          git push origin HEAD:main
