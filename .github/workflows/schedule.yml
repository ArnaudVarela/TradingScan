name: Run screener and publish CSV

on:
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: screener-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DEFAULT_BRANCH: 'main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure clean working tree (sync to origin)
        run: |
          set -euo pipefail
          git fetch origin $DEFAULT_BRANCH
          git reset --hard origin/$DEFAULT_BRANCH
          git clean -fd

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ================== UNIVERS (R1000/R2000) ==================
      - name: Generate universes (R1000/R2000) from iShares
        run: |
          set -euo pipefail
          python gen_r2000_from_ishares.py

          echo "== ROOT =="
          ls -lah | sed -n '1,200p'
          for f in russell1000.csv russell2000.csv; do
            if [ -f "$f" ]; then
              echo "--- head $f ---"; head -n 5 "$f"
            else
              echo "Missing $f (root)"; exit 1
            fi
          done

          echo "== dashboard/public =="
          ls -lah dashboard/public || true
          for f in russell1000.csv russell2000.csv; do
            if [ -f "dashboard/public/$f" ]; then
              echo "--- head $f (public) ---"; head -n 5 "dashboard/public/$f"
            else
              echo "WARN: dashboard/public/$f absent (OK si front lit en RAW root)."
            fi
          done

      # ================== SECTEURS ==================
      - name: Build sector catalog (R1K + SPSM)
        run: |
          set -euo pipefail
          python build_sector_catalog.py

          for f in sector_catalog.csv sector_history.csv sector_breadth.csv; do
            if [ ! -f "dashboard/public/$f" ]; then
              echo "Missing dashboard/public/$f"; exit 1
            fi
            echo "--- head $f ---"; head -n 5 "dashboard/public/$f"
          done

      # ================== SCREENER ==================
      - name: Run screener
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          set -euo pipefail
          python mix_ab_screen_indices.py

          # fichier critique
          test -f dashboard/public/confirmed_STRONGBUY.csv || (echo "Missing confirmed_STRONGBUY.csv"; exit 1)
          echo "--- head confirmed_STRONGBUY.csv ---"
          head -n 5 dashboard/public/confirmed_STRONGBUY.csv || true

      # ================== BACKTEST ==================
      - name: Run backtest
        run: |
          set -euo pipefail
          python backtest_signals.py

          echo "== Backtest outputs (dashboard/public) =="
          req=(
            "backtest_summary.csv"
            "backtest_trades.csv"
            "backtest_equity_10d.csv"
            "backtest_benchmark_spy_10d.csv"
          )
          for f in "${req[@]}"; do
            if [ ! -f "dashboard/public/$f" ]; then
              echo "Missing dashboard/public/$f"; exit 1
            fi
            echo "--- head $f ---"; head -n 5 "dashboard/public/$f" || true
            echo "--- linecount $f ---"; wc -l "dashboard/public/$f" || true
          done

      # ================== FEAR & GREED ==================
      - name: Update Fear & Greed (alt.me)
        run: python fetch_alt_fng.py


      # ================== DIAGNOSTIC GLOBAL ==================
      - name: Sanity dump (root + public)
        run: |
          set -euo pipefail
          echo "== ROOT (short) =="; ls -lah | sed -n '1,200p'
          echo "== dashboard/public (short) =="; ls -lah dashboard/public || true

      # ================== COMMIT / PUSH ==================
      - name: Commit & push CSV updates
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No CSV changes to commit."
            exit 0
          fi
          git commit -m "auto: update CSVs $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git pull --rebase origin $DEFAULT_BRANCH
          git push origin HEAD:$DEFAULT_BRANCH
